//------------------------------------------------------------------------------
// <auto-generated>
//	 This code was generated by a tool.
//	 Runtime Version:4.0.30319.1
//
//	 Changes to this file may cause incorrect behavior and will be lost if
//	 the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by xsd, Version=4.0.30319.1.
// 


/// <summary>
///Represents a strongly typed in-memory cache of data.
///</summary>
[global::System.Serializable()]
[global::System.ComponentModel.DesignerCategoryAttribute("code")]
[global::System.ComponentModel.ToolboxItem(true)]
[global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
[global::System.Xml.Serialization.XmlRootAttribute("LoginsTable")]
[global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
public partial class LoginsTable : global::System.Data.DataSet {
	
	private LoginsDataTable tableLogins;
	
	private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
	
	[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
	public LoginsTable() {
		this.BeginInit();
		this.InitClass();
		global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
		base.Tables.CollectionChanged += schemaChangedHandler;
		base.Relations.CollectionChanged += schemaChangedHandler;
		this.EndInit();
	}
	
	[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
	protected LoginsTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
			base(info, context, false) {
		if ((this.IsBinarySerialized(info, context) == true)) {
			this.InitVars(false);
			global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
			this.Tables.CollectionChanged += schemaChangedHandler1;
			this.Relations.CollectionChanged += schemaChangedHandler1;
			return;
		}
		string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
		if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
			global::System.Data.DataSet ds = new global::System.Data.DataSet();
			ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
			if ((ds.Tables["Logins"] != null)) {
				base.Tables.Add(new LoginsDataTable(ds.Tables["Logins"]));
			}
			this.DataSetName = ds.DataSetName;
			this.Prefix = ds.Prefix;
			this.Namespace = ds.Namespace;
			this.Locale = ds.Locale;
			this.CaseSensitive = ds.CaseSensitive;
			this.EnforceConstraints = ds.EnforceConstraints;
			this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
			this.InitVars();
		}
		else {
			this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
		}
		this.GetSerializationData(info, context);
		global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
		base.Tables.CollectionChanged += schemaChangedHandler;
		this.Relations.CollectionChanged += schemaChangedHandler;
	}
	
	[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
	[global::System.ComponentModel.Browsable(false)]
	[global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
	public LoginsDataTable Logins {
		get {
			return this.tableLogins;
		}
	}
	
	[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
	[global::System.ComponentModel.BrowsableAttribute(true)]
	[global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
	public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
		get {
			return this._schemaSerializationMode;
		}
		set {
			this._schemaSerializationMode = value;
		}
	}
	
	[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
	[global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
	public new global::System.Data.DataTableCollection Tables {
		get {
			return base.Tables;
		}
	}
	
	[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
	[global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
	public new global::System.Data.DataRelationCollection Relations {
		get {
			return base.Relations;
		}
	}
	
	[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
	protected override void InitializeDerivedDataSet() {
		this.BeginInit();
		this.InitClass();
		this.EndInit();
	}
	
	[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
	public override global::System.Data.DataSet Clone() {
		LoginsTable cln = ((LoginsTable)(base.Clone()));
		cln.InitVars();
		cln.SchemaSerializationMode = this.SchemaSerializationMode;
		return cln;
	}
	
	[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
	protected override bool ShouldSerializeTables() {
		return false;
	}
	
	[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
	protected override bool ShouldSerializeRelations() {
		return false;
	}
	
	[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
	protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
		if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
			this.Reset();
			global::System.Data.DataSet ds = new global::System.Data.DataSet();
			ds.ReadXml(reader);
			if ((ds.Tables["Logins"] != null)) {
				base.Tables.Add(new LoginsDataTable(ds.Tables["Logins"]));
			}
			this.DataSetName = ds.DataSetName;
			this.Prefix = ds.Prefix;
			this.Namespace = ds.Namespace;
			this.Locale = ds.Locale;
			this.CaseSensitive = ds.CaseSensitive;
			this.EnforceConstraints = ds.EnforceConstraints;
			this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
			this.InitVars();
		}
		else {
			this.ReadXml(reader);
			this.InitVars();
		}
	}
	
	[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
	protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
		global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
		this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
		stream.Position = 0;
		return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
	}
	
	[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
	internal void InitVars() {
		this.InitVars(true);
	}
	
	[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
	internal void InitVars(bool initTable) {
		this.tableLogins = ((LoginsDataTable)(base.Tables["Logins"]));
		if ((initTable == true)) {
			if ((this.tableLogins != null)) {
				this.tableLogins.InitVars();
			}
		}
	}
	
	[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
	private void InitClass() {
		this.DataSetName = "LoginsTable";
		this.Prefix = "";
		this.Namespace = "http://dev.stormraidergames.com/TortusLogins.xsd";
		this.Locale = new global::System.Globalization.CultureInfo("");
		this.EnforceConstraints = true;
		this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
		this.tableLogins = new LoginsDataTable();
		base.Tables.Add(this.tableLogins);
	}
	
	[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
	private bool ShouldSerializeLogins() {
		return false;
	}
	
	[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
	private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
		if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
			this.InitVars();
		}
	}
	
	[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
	public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
		LoginsTable ds = new LoginsTable();
		global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
		global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
		global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
		any.Namespace = ds.Namespace;
		sequence.Items.Add(any);
		type.Particle = sequence;
		global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
		if (xs.Contains(dsSchema.TargetNamespace)) {
			global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
			global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
			try {
				global::System.Xml.Schema.XmlSchema schema = null;
				dsSchema.Write(s1);
				for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
					schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
					s2.SetLength(0);
					schema.Write(s2);
					if ((s1.Length == s2.Length)) {
						s1.Position = 0;
						s2.Position = 0;
						for (; ((s1.Position != s1.Length) 
									&& (s1.ReadByte() == s2.ReadByte())); ) {
							;
						}
						if ((s1.Position == s1.Length)) {
							return type;
						}
					}
				}
			}
			finally {
				if ((s1 != null)) {
					s1.Close();
				}
				if ((s2 != null)) {
					s2.Close();
				}
			}
		}
		xs.Add(dsSchema);
		return type;
	}
	
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
	public delegate void LoginsRowChangeEventHandler(object sender, LoginsRowChangeEvent e);
	
	/// <summary>
	///Represents the strongly named DataTable class.
	///</summary>
	[global::System.Serializable()]
	[global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
	public partial class LoginsDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
		
		private global::System.Data.DataColumn columnID;
		
		private global::System.Data.DataColumn columnLogin;
		
		private global::System.Data.DataColumn columnPassword;
		
		private global::System.Data.DataColumn columnAccessLevel;
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
		public LoginsDataTable() {
			this.TableName = "Logins";
			this.BeginInit();
			this.InitClass();
			this.EndInit();
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
		internal LoginsDataTable(global::System.Data.DataTable table) {
			this.TableName = table.TableName;
			if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
				this.CaseSensitive = table.CaseSensitive;
			}
			if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
				this.Locale = table.Locale;
			}
			if ((table.Namespace != table.DataSet.Namespace)) {
				this.Namespace = table.Namespace;
			}
			this.Prefix = table.Prefix;
			this.MinimumCapacity = table.MinimumCapacity;
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
		protected LoginsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
				base(info, context) {
			this.InitVars();
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
		public global::System.Data.DataColumn IDColumn {
			get {
				return this.columnID;
			}
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
		public global::System.Data.DataColumn LoginColumn {
			get {
				return this.columnLogin;
			}
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
		public global::System.Data.DataColumn PasswordColumn {
			get {
				return this.columnPassword;
			}
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
		public global::System.Data.DataColumn AccessLevelColumn {
			get {
				return this.columnAccessLevel;
			}
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
		[global::System.ComponentModel.Browsable(false)]
		public int Count {
			get {
				return this.Rows.Count;
			}
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
		public LoginsRow this[int index] {
			get {
				return ((LoginsRow)(this.Rows[index]));
			}
		}
		
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
		public event LoginsRowChangeEventHandler LoginsRowChanging;
		
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
		public event LoginsRowChangeEventHandler LoginsRowChanged;
		
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
		public event LoginsRowChangeEventHandler LoginsRowDeleting;
		
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
		public event LoginsRowChangeEventHandler LoginsRowDeleted;
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
		public void AddLoginsRow(LoginsRow row) {
			this.Rows.Add(row);
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
		public LoginsRow AddLoginsRow(string Login, string Password, string AccessLevel) {
			LoginsRow rowLoginsRow = ((LoginsRow)(this.NewRow()));
			object[] columnValuesArray = new object[] {
					null,
					Login,
					Password,
					AccessLevel};
			rowLoginsRow.ItemArray = columnValuesArray;
			this.Rows.Add(rowLoginsRow);
			return rowLoginsRow;
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
		public virtual global::System.Collections.IEnumerator GetEnumerator() {
			return this.Rows.GetEnumerator();
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
		public override global::System.Data.DataTable Clone() {
			LoginsDataTable cln = ((LoginsDataTable)(base.Clone()));
			cln.InitVars();
			return cln;
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
		protected override global::System.Data.DataTable CreateInstance() {
			return new LoginsDataTable();
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
		internal void InitVars() {
			this.columnID = base.Columns["ID"];
			this.columnLogin = base.Columns["Login"];
			this.columnPassword = base.Columns["Password"];
			this.columnAccessLevel = base.Columns["AccessLevel"];
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
		private void InitClass() {
			this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
			base.Columns.Add(this.columnID);
			this.columnLogin = new global::System.Data.DataColumn("Login", typeof(string), null, global::System.Data.MappingType.Element);
			base.Columns.Add(this.columnLogin);
			this.columnPassword = new global::System.Data.DataColumn("Password", typeof(string), null, global::System.Data.MappingType.Element);
			base.Columns.Add(this.columnPassword);
			this.columnAccessLevel = new global::System.Data.DataColumn("AccessLevel", typeof(string), null, global::System.Data.MappingType.Element);
			base.Columns.Add(this.columnAccessLevel);
			this.columnID.AutoIncrement = true;
			this.columnID.AllowDBNull = false;
			this.columnLogin.AllowDBNull = false;
			this.columnPassword.AllowDBNull = false;
			this.columnAccessLevel.AllowDBNull = false;
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
		public LoginsRow NewLoginsRow() {
			return ((LoginsRow)(this.NewRow()));
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
		protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
			return new LoginsRow(builder);
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
		protected override global::System.Type GetRowType() {
			return typeof(LoginsRow);
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
		protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
			base.OnRowChanged(e);
			if ((this.LoginsRowChanged != null)) {
				this.LoginsRowChanged(this, new LoginsRowChangeEvent(((LoginsRow)(e.Row)), e.Action));
			}
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
		protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
			base.OnRowChanging(e);
			if ((this.LoginsRowChanging != null)) {
				this.LoginsRowChanging(this, new LoginsRowChangeEvent(((LoginsRow)(e.Row)), e.Action));
			}
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
		protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
			base.OnRowDeleted(e);
			if ((this.LoginsRowDeleted != null)) {
				this.LoginsRowDeleted(this, new LoginsRowChangeEvent(((LoginsRow)(e.Row)), e.Action));
			}
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
		protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
			base.OnRowDeleting(e);
			if ((this.LoginsRowDeleting != null)) {
				this.LoginsRowDeleting(this, new LoginsRowChangeEvent(((LoginsRow)(e.Row)), e.Action));
			}
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
		public void RemoveLoginsRow(LoginsRow row) {
			this.Rows.Remove(row);
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
		public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
			global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
			global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
			LoginsTable ds = new LoginsTable();
			global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
			any1.Namespace = "http://www.w3.org/2001/XMLSchema";
			any1.MinOccurs = new decimal(0);
			any1.MaxOccurs = decimal.MaxValue;
			any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
			sequence.Items.Add(any1);
			global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
			any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
			any2.MinOccurs = new decimal(1);
			any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
			sequence.Items.Add(any2);
			global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
			attribute1.Name = "namespace";
			attribute1.FixedValue = ds.Namespace;
			type.Attributes.Add(attribute1);
			global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
			attribute2.Name = "tableTypeName";
			attribute2.FixedValue = "LoginsDataTable";
			type.Attributes.Add(attribute2);
			type.Particle = sequence;
			global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
			if (xs.Contains(dsSchema.TargetNamespace)) {
				global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
				global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
				try {
					global::System.Xml.Schema.XmlSchema schema = null;
					dsSchema.Write(s1);
					for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
						schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
						s2.SetLength(0);
						schema.Write(s2);
						if ((s1.Length == s2.Length)) {
							s1.Position = 0;
							s2.Position = 0;
							for (; ((s1.Position != s1.Length) 
										&& (s1.ReadByte() == s2.ReadByte())); ) {
								;
							}
							if ((s1.Position == s1.Length)) {
								return type;
							}
						}
					}
				}
				finally {
					if ((s1 != null)) {
						s1.Close();
					}
					if ((s2 != null)) {
						s2.Close();
					}
				}
			}
			xs.Add(dsSchema);
			return type;
		}
	}
	
	/// <summary>
	///Represents strongly named DataRow class.
	///</summary>
	public partial class LoginsRow : global::System.Data.DataRow {
		
		private LoginsDataTable tableLogins;
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
		internal LoginsRow(global::System.Data.DataRowBuilder rb) : 
				base(rb) {
			this.tableLogins = ((LoginsDataTable)(this.Table));
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
		public int ID {
			get {
				return ((int)(this[this.tableLogins.IDColumn]));
			}
			set {
				this[this.tableLogins.IDColumn] = value;
			}
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
		public string Login {
			get {
				return ((string)(this[this.tableLogins.LoginColumn]));
			}
			set {
				this[this.tableLogins.LoginColumn] = value;
			}
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
		public string Password {
			get {
				return ((string)(this[this.tableLogins.PasswordColumn]));
			}
			set {
				this[this.tableLogins.PasswordColumn] = value;
			}
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
		public string AccessLevel {
			get {
				return ((string)(this[this.tableLogins.AccessLevelColumn]));
			}
			set {
				this[this.tableLogins.AccessLevelColumn] = value;
			}
		}
	}
	
	/// <summary>
	///Row event argument class
	///</summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
	public class LoginsRowChangeEvent : global::System.EventArgs {
		
		private LoginsRow eventRow;
		
		private global::System.Data.DataRowAction eventAction;
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
		public LoginsRowChangeEvent(LoginsRow row, global::System.Data.DataRowAction action) {
			this.eventRow = row;
			this.eventAction = action;
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
		public LoginsRow Row {
			get {
				return this.eventRow;
			}
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
		public global::System.Data.DataRowAction Action {
			get {
				return this.eventAction;
			}
		}
	}
}
